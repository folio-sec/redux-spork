/*
 * Copyright 2018 FOLIO Co.,Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// @flow

declare module "redux-spork" {
  import type { Middleware } from "redux";

  declare export type Options = {
    error?: (err: any) => void,
  };

  declare export type Action = { type: string };

  declare export type Merge = <A: { type: string }>(
    type: $PropertyType<A, "type">,
  ) => Promise<A>;

  declare export type Callback<A> = ({
    action: A,
    dispatch: Dispatch<any>,
    merge: Merge,
    getState: () => any,
  }) => void | Promise<void>;

  declare export type Spork<A: Action> = {
    type: $PropertyType<A, "type">,
    callback: Callback<A>,
  };

  declare export function createMiddleware(options: Options): Middleware;

  declare export function fork<A: Action>(
    type: $PropertyType<A, "type">,
    callback: Callback<A>,
  ): Spork<A>;
}
